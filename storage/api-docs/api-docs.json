{
    "openapi": "3.0.0",
    "info": {
        "title": "Gratus API",
        "version": "0.7"
    },
    "paths": {
        "/api/mobile/groupList": {
            "get": {
                "tags": [
                    "Mobile"
                ],
                "summary": "Get Group List",
                "operationId": "groupList",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "org_name": {
                                            "type": "string",
                                            "example": "Test"
                                        },
                                        "group_name": {
                                            "type": "string",
                                            "example": "test"
                                        },
                                        "users": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": {
                                                    "id": 2,
                                                    "first_name": "Test",
                                                    "last_name": "Test2",
                                                    "email": "valeriy.env@gmail.com",
                                                    "photo": null,
                                                    "verificate_code": null,
                                                    "api_token": null,
                                                    "forgot_pass": null,
                                                    "status": "Blocked",
                                                    "org_id": 59,
                                                    "kyc_status": null,
                                                    "if_in_group": 22,
                                                    "firebase_token": null
                                                }
                                            },
                                            "collectionFormat": "multi"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/mobile/getNotifications": {
            "get": {
                "tags": [
                    "Mobile"
                ],
                "summary": "Get Notifications List",
                "operationId": "getNotifications",
                "responses": {
                    "200": {
                        "description": "Success. List of notifications"
                    }
                }
            }
        },
        "/api/mobile/register": {
            "post": {
                "tags": [
                    "Mobile"
                ],
                "summary": "User register",
                "description": "Comments in schema",
                "operationId": "userRegister",
                "requestBody": {
                    "description": "User credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "first_name": {
                                        "description": "if model: Tipper or Receiver",
                                        "type": "string",
                                        "format": "first_name",
                                        "example": "Name"
                                    },
                                    "last_name": {
                                        "description": "if model: Tipper or Receiver",
                                        "type": "string",
                                        "format": "last_name",
                                        "example": "Surname"
                                    },
                                    "name": {
                                        "description": "if model: Organization",
                                        "type": "string",
                                        "format": "name",
                                        "example": "OrgName"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "email@gratus.user"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password12345"
                                    },
                                    "repeat_password": {
                                        "type": "string",
                                        "format": "repeat_password",
                                        "example": "password12345"
                                    },
                                    "model": {
                                        "type": "string",
                                        "format": "model",
                                        "example": "Receiver"
                                    },
                                    "photo": {
                                        "type": "blob",
                                        "format": "photo",
                                        "example": "iVBORw0KGgoAAAANSUhEUgAAAGYAAABoCAYAAAAD1YUSAAAK1WlDQ1BJQ0MgUHJvZmlsZQAASImVlwdUU0kXx+e99JDQQq+hd6QIBJASegClV1EJSSChxJCCiB0RV0BRVESwLOgqRcHVFZC1IKJYWAQL2DfIoqKuiwUbKvuAj7D71fP9z5nM79zcuXPvnDfv3AcA2Y8pEGTCigBk8cXCyEAfanxCIhX3BMAAAipAC7gwWSIBPTw8FCCamf+u9/2IL6KbNpOx/vX//yplNkfEAgBKQjiFLWJlIdyOjCcsgVAMAKoWsRstEwsmuRthFSGSIMLSSU6b5neTnDLFaPyUT3SkL8I6AOBJTKYwDQCSOWKn5rDSkDikIITt+GweH+FchD1ZXCYb4VaErbOylk7ybwibI/4CAMgkhGkpf4mZ9rf4KbL4TGaajKfrmhLejycSZDKX/59H87+VlSmZ2cMUGSSuMCgSmeWR87uTsTRExvyUBWEzzGNP+U8xVxIUM8MskW/iDLOZfiGytZkLQmc4lRfAkMURM6JnmCPyj5ph4dJI2V6pQl/6DDOFs/tKMmJkdi6HIYufx42Om+EcXuyCGRZlRIXM+vjK7EJJpCx/Dj/QZ3bfAFntWaK/1MtjyNaKudFBstqZs/lz+PTZmKJ4WW5sjp//rE+MzF8g9pHtJcgMl/lzMgNldlFOlGytGHk4Z9eGy84wnRkcPsPAAbiAQJAJaMAJ2AEg5uSKJ4vwXSpYLuSlccVUOnLTOFQGn2VrTXWwc3AAYPLeTj8KbyOm7iOk1j1rEyPn5/E7cld6Z22JyMkcQeKqO87azDUAUN0HQKslSyLMmbahJ38wgAgUkDeCJtADRsAc2CA5OgN34A38QTAIA9EgASwGLMAFWUAIloGVYB0oBMVgK9gJKsF+cADUgqPgOGgBp8F5cAlcA73gNrgPpGAYvACj4D0YhyAIB5EhCqQJ6UMmkBXkANEgT8gfCoUioQQoGUqD+JAEWgmth4qhMqgSqobqoB+hU9B56ArUB92FBqER6A30GUbBJFgF1oVN4TkwDabDIXA0vAhOg7PhPLgA3gJXwDXwEbgZPg9fg2/DUvgFPIYCKDmUGsoAZYOioXxRYahEVCpKiFqNKkKVo2pQjag2VBfqJkqKeon6hMaiKWgq2gbtjg5Cx6BZ6Gz0anQJuhJdi25Gd6JvogfRo+hvGDJGB2OFccMwMPGYNMwyTCGmHHMIcxJzEXMbM4x5j8Vi1bBmWBdsEDYBm45dgS3B7sU2Yduxfdgh7BgOh9PEWeE8cGE4Jk6MK8Ttxh3BncPdwA3jPuLl8Pp4B3wAPhHPx+fjy/H1+LP4G/in+HGCIsGE4EYII7AJywmlhIOENsJ1wjBhnKhENCN6EKOJ6cR1xApiI/Ei8QHxrZycnKGcq1yEHE9urVyF3DG5y3KDcp9IyiRLki8piSQhbSEdJrWT7pLekslkU7I3OZEsJm8h15EvkB+RP8pT5G3lGfJs+TXyVfLN8jfkXykQFEwU6AqLFfIUyhVOKFxXeKlIUDRV9FVkKq5WrFI8pTigOKZEUbJXClPKUipRqle6ovRMGadsquyvzFYuUD6gfEF5iIKiGFF8KSzKespBykXKsApWxUyFoZKuUqxyVKVHZVRVWXWuaqxqrmqV6hlVqRpKzVSNoZapVqp2XK1f7bO6rjpdnaO+Sb1R/Yb6Bw1tDW8NjkaRRpPGbY3PmlRNf80MzW2aLZoPtdBalloRWsu09mld1HqpraLtrs3SLtI+rn1PB9ax1InUWaFzQKdbZ0xXTzdQV6C7W/eC7ks9NT1vvXS9HXpn9Ub0Kfqe+jz9Hfrn9J9TVal0aia1gtpJHTXQMQgykBhUG/QYjBuaGcYY5hs2GT40IhrRjFKNdhh1GI0a6xvPN15p3GB8z4RgQjPhmuwy6TL5YGpmGme60bTF9JmZhhnDLM+sweyBOdncyzzbvMb8lgXWgmaRYbHXotcStnSy5FpWWV63gq2crXhWe636rDHWrtZ86xrrARuSDd0mx6bBZtBWzTbUNt+2xfbVHOM5iXO2zema883OyS7T7qDdfXtl+2D7fPs2+zcOlg4shyqHW45kxwDHNY6tjq/nWs3lzN03944TxWm+00anDqevzi7OQudG5xEXY5dklz0uAzQVWjithHbZFePq47rG9bTrJzdnN7Hbcbc/3G3cM9zr3Z/NM5vHmXdw3pCHoQfTo9pD6kn1TPb83lPqZeDF9Krxeuxt5M32PuT9lG5BT6cfob/ysfMR+pz0+eDr5rvKt90P5RfoV+TX46/sH+Nf6f8owDAgLaAhYDTQKXBFYHsQJigkaFvQAEOXwWLUMUaDXYJXBXeGkEKiQipDHodahgpD2+bD84Pnb5//YIHJAv6CljAQxgjbHvYw3Cw8O/znCGxEeERVxJNI+8iVkV1RlKglUfVR76N9okuj78eYx0hiOmIVYpNi62I/xPnFlcVJ4+fEr4q/lqCVwEtoTcQlxiYeShxb6L9w58LhJKekwqT+RWaLchddWay1OHPxmSUKS5hLTiRjkuOS65O/MMOYNcyxFEbKnpRRli9rF+sF25u9gz3C8eCUcZ6meqSWpT5L80jbnjbC9eKWc1/yfHmVvNfpQen70z9khGUczpjIjMtsysJnJWed4ivzM/idS/WW5i7tE1gJCgXSbLfsndmjwhDhIREkWiRqFasgDVK3xFyyQTKY45lTlfNxWeyyE7lKufzc7uWWyzctf5oXkPfDCvQK1oqOlQYr160cXEVfVb0aWp2yumON0ZqCNcNrA9fWriOuy1j3S75dfln+u/Vx69sKdAvWFgxtCNzQUChfKCwc2Oi+cf936O943/Vscty0e9O3InbR1WK74vLiLyWskqub7TdXbJ7Ykrqlp9S5dN9W7Fb+1v5tXttqy5TK8sqGts/f3ryDuqNox7udS3ZeKZ9bvn8XcZdkl7QitKJ1t/Hurbu/VHIrb1f5VDXt0dmzac+Hvey9N/Z572vcr7u/eP/n73nf36kOrG6uMa0pP4A9kHPgycHYg10/0H6oO6R1qPjQ18P8w9LayNrOOpe6unqd+tIGuEHSMHIk6UjvUb+jrY02jdVNak3Fx8AxybHnPyb/2H885HjHCdqJxp9MftpzknKyqBlqXt482sJtkbYmtPadCj7V0ebedvJn258PnzY4XXVG9UzpWeLZgrMT5/LOjbUL2l+eTzs/1LGk4/6F+Au3OiM6ey6GXLx8KeDShS5617nLHpdPX3G7cuoq7WrLNedrzd1O3Sd/cfrlZI9zT/N1l+utva69bX3z+s7e8Lpx/qbfzUu3GLeu3V5wu68/pv/OQNKA9A77zrO7mXdf38u5N35/7QPMg6KHig/LH+k8qvnV4tcmqbP0zKDfYPfjqMf3h1hDL34T/fZluOAJ+Un5U/2ndc8cnp0eCRjpfb7w+fALwYvxl4W/K/2+55X5q5/+8P6jezR+dPi18PXEm5K3mm8Pv5v7rmMsfOzR+6z34x+KPmp+rP1E+9T1Oe7z0/FlX3BfKr5afG37FvLtwUTWxISAKWROtQIoZMCpqQC8OYz0xQkAUHoBIC6c7qunBE1/C0wR+E883XtPyRmAaqQPiyMCELIBgMpBAMwakbjNAISTAYh2BbCjo2z8Q6JUR4fpWCSk58M8mph4i/S/uO0AfN06MTFeMzHx9QCS7AMA2vnT/fyk9JBvi4VrAaFzM/g3mu71/1LjP89gMoOpHP42/wmQzhXL5EK5PgAAAIplWElmTU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUAAAABAAAARgEoAAMAAAABAAIAAIdpAAQAAAABAAAATgAAAAAAAACQAAAAAQAAAJAAAAABAAOShgAHAAAAEgAAAHigAgAEAAAAAQAAAGagAwAEAAAAAQAAAGgAAAAAQVNDSUkAAABTY3JlZW5zaG90bUNrtAAAAAlwSFlzAAAWJQAAFiUBSVIk8AAAAdZpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDYuMC4wIj4KICAgPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4KICAgICAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgICAgICAgICAgeG1sbnM6ZXhpZj0iaHR0cDovL25zLmFkb2JlLmNvbS9leGlmLzEuMC8iPgogICAgICAgICA8ZXhpZjpQaXhlbFlEaW1lbnNpb24+MTA0PC9leGlmOlBpeGVsWURpbWVuc2lvbj4KICAgICAgICAgPGV4aWY6UGl4ZWxYRGltZW5zaW9uPjEwMjwvZXhpZjpQaXhlbFhEaW1lbnNpb24+CiAgICAgICAgIDxleGlmOlVzZXJDb21tZW50PlNjcmVlbnNob3Q8L2V4aWY6VXNlckNvbW1lbnQ+CiAgICAgIDwvcmRmOkRlc2NyaXB0aW9uPgogICA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgqh8GwdAAAAHGlET1QAAAACAAAAAAAAADQAAAAoAAAANAAAADQAAAQHrIPkYgAAA9NJREFUeAHsmtkrrVEYxp9tnjJLGRMyRIYMGSIylMKFv1JJpogrJa4kKUkulBvlwpDIfM55Vh0pNmvvby3fu2q9N3vvb1jfs57ffvd+1xD58y/gQ5wDEQ9GHBMlyIORyQUejAcj1AGhsnzGeDBCHRAqy2eMByPUAaGyfMZ4MEIdECrLZ4wHI9QBobJ8xngwQh0QKstnjAcj1AGhsnzGeDBCHRAqy2eMByPUAaGyxGTM09MTLi4ucHV1hdvbWzw8PODl5QWJiYlISkpCZmYmsrOzUVRUhNzcXEQiEaGWmpEVKpjX11ecnZ3h9PRUQdHdsJOWloby8nLU1NQoSGaskNVK6GC2trZwfn4etyslJSVobW1FTk5O3G1IvDFUMDSEWRMUDn/WGhoa0NzcjISEBIk+x6wpdDCm4LCdgoICDAwMgD91rocIMDTRROawnaysLAwNDalXfnY1xIChgSbhjI2NITU11VUu8jb8mYJTWFiI4eFhVW67SEdUxvw30BQcFgSs2FwMkWBopAk4rNbGx8eRl5fnHBtrYJ6fn5GcnBzIEBNwOFMwMjISSEcYN1sDs7Ozo0bljY2NgfplAs7o6Cj4n+NSWAHz+PiIhYUFvL29oampSQ38gpgSFA6nb/r7+4NI+PV7rYA5OTnB7u7ue2eYNS0tLe+f43kTBA4nQmdmZpyq0KyA2d7eVpOTHwHU19ejra3t46GY33MGenl5GXyNNQYHB8F5NVfCCpilpSXc3d198qCurg7t7e2fjuscCJIxbN/EF0NHp6lrjINhNTY3NxdVX21tLTo6OqKe/+pEUChss7S0VM2jfdW+xGPGwdzf32NxcfHbvlZXV6Ozs1NrscsEFIrhssDExMS3uiSdNA7m+voaa2trP/axqqoK3d3d38IxBYViMjIyMD09/aMuKRcYB3Nzc4PV1VWt/lVWVqKnp+dLOCahUAyXpqemprR0SbjIOBiOYebn57X7VlFRoeB8XOAyDYViuBwwOTmprSvsC42DYYdmZ2fV4FK3c2VlZejr61OrjzagUEdxcbGabdbVFPZ1VsCsr6/j8vIypr5xjNHb2wuOgYLsAYj20HiqwWht/cZxK2D29/dxdHQUs/6UlJS4Bo86D+rq6gKrQVfCChh+4zc3N8V4wOl/VmTp6eliNP0kxAoY7g/j6J9jGgmRn5+v1mUkaNHVYAUMH354eIiDgwNdHVavY8XH4oJFhithDQy3uK6srIBTNBLCNTjWwBDG8fEx9vb2JHBRGlyCYxUM/2tYOnOjuJRwBY5VMITBnfsbGxvWyuB4gLsA5y8AAAD//7rwuJUAAAJdSURBVO3avYrCQBAH8ImIiI0WFn49iKAg+AY2vq6NWFlpI4haWPmFIKgg4t1NuECQM+w5mZidnQUxxsxk/f+ICRrv62cA89hutzAYDODxeDDvybx9JpOBVqsFjUbDvCjBLb0kYPDzrNdrGI1GimOImxgMzmez2cBwOITb7WY4Pf7N0nrkJAqDMV8uF//I2e12/Kkb7iGNOInDBFktl0uYTCZwvV6DVR99ThvOx2BQAS8GVqsVLBYLOBwOxjAYYrFYhOPxaFxjsmGacD4KEw7rfD7756D9fg+n08k/ku73O+BFYy6Xg0KhAKVSCcrlMlQqFX/deDyG+XwebkNeTgtOamDeTVQqjvUwCCoRRwSMRBwxMNJwRMFIwhEHIwVHJIwEHLEwtuOIhrEZRzyMrThOwNiI4wyMbThOwdiE4xyMLThOwnDitNttqNfruAvScBYGU+P4VTqfz0Ov1yOhYLHTMBhA3Die50G/3wf8w40ynIeJG6dWq0Gn06GY+LUK8xthHEcO3ofQ7XYBv86oQ2FCCVJw4kTBKSlMCAYX38GJGwXnoTCYwtP4Dw4HCk5HYZ5QgpcmOFwoChMovHiOwuFEUZgXIOHVf+FwoyhMWCBieTqdwmw2A7wztFqtQrPZjOWSOGKXeo6JCif8Ht5njY9sNhtezbasJ3+2aGmNFYaWH1u1wrBFS2usMLT82KoVhi1aWmOFoeXHVq0wbNHSGisMLT+2aoVhi5bWWGFo+bFVKwxbtLTGCkPLj61aYdiipTVWGFp+bNUKwxYtrbHC0PJjq1YYtmhpjRWGlh9b9TdzvAAFOhzAIQAAAABJRU5ErkJggg=="
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully created"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "533": {
                        "description": "First name should contain only letters"
                    },
                    "534": {
                        "description": "First name should contain at least 3 characters"
                    },
                    "535": {
                        "description": "Last name should contain only letters"
                    },
                    "536": {
                        "description": "Last name should contain at least 3 characters"
                    },
                    "537": {
                        "description": "Email should contain '@' and '.'"
                    },
                    "538": {
                        "description": "Password should contain at least 6 characters"
                    },
                    "539": {
                        "description": "Passwords don't match"
                    }
                }
            }
        },
        "/api/mobile/login": {
            "post": {
                "tags": [
                    "Mobile"
                ],
                "summary": "Login",
                "description": "Comments in schema",
                "operationId": "userLogin",
                "requestBody": {
                    "description": "User credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "email@gratus.user"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password12345"
                                    },
                                    "model": {
                                        "description": "Receiver as default. Can be 'Tiper', 'Receiver', 'Organization' ",
                                        "type": "string",
                                        "format": "model",
                                        "example": "Receiver"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "0d21973f68fa3c115281b9d385a3fe310e178589cd135ac9a0d89756f3f77c81"
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Have a great shift!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "540": {
                        "description": "Email is incorrect"
                    },
                    "541": {
                        "description": "Email should contain '@' and '.'"
                    },
                    "542": {
                        "description": "Password is incorrect"
                    }
                }
            }
        },
        "/api/mobile/isEmailConfirmed": {
            "post": {
                "tags": [
                    "Mobile"
                ],
                "summary": "Check email confirm",
                "description": "Comments in schema",
                "operationId": "isEmailConfirmed",
                "requestBody": {
                    "description": "User credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "valeriy.env@gmail.com"
                                    },
                                    "model": {
                                        "description": "Receiver as default. Can be 'Tiper', 'Receiver', 'Organization' ",
                                        "type": "string",
                                        "format": "model",
                                        "example": "Tipper"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/mobile/transaction/create": {
            "post": {
                "tags": [
                    "Mobile"
                ],
                "summary": "Create transaction",
                "description": "Comments in schema",
                "operationId": "createTransaction",
                "requestBody": {
                    "description": "User credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "receiver_id": {
                                        "type": "integer",
                                        "format": "receiver_id",
                                        "example": "2"
                                    },
                                    "amount": {
                                        "type": "integer",
                                        "format": "amount",
                                        "example": "50"
                                    },
                                    "stars": {
                                        "type": "integer",
                                        "format": "stars",
                                        "example": "5"
                                    },
                                    "comment": {
                                        "type": "string",
                                        "format": "comment",
                                        "example": "Some text here"
                                    },
                                    "anon_transfer": {
                                        "type": "boolean",
                                        "format": "anon_transfer",
                                        "example": "1",
                                        "description":"if you want to send anonymous transaction"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": "42"
                                        },
                                        "transaction_id": {
                                            "type": "string",
                                            "example": "AA5291"
                                        },
                                        "org_id": {
                                            "type": "integer",
                                            "example": "59"
                                        },
                                        "receiver_id": {
                                            "type": "integer",
                                            "example": "2"
                                        },
                                        "tipper_id": {
                                            "type": "integer",
                                            "example": "40"
                                        },
                                        "amount": {
                                            "type": "integer",
                                            "example": "50"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "Approved"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/mobile/logout": {
            "post": {
                "tags": [
                    "Mobile"
                ],
                "summary": "Logout",
                "operationId": "userLogout",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "msg": {
                                            "type": "string",
                                            "example": "You have been successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/mobile/forgotPass": {
            "post": {
                "tags": [
                    "Mobile"
                ],
                "summary": "Forgot Password",
                "description": "",
                "operationId": "forgotPass",
                "requestBody": {
                    "description": "User credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [],
                                "properties": {
                                    "email": {
                                        "type": "email",
                                        "example": "email@gratus.user"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "No body in answer"
                    },
                    "543": {
                        "description": "Email is incorrect."
                    },
                    "544": {
                        "description": "Email should contain @ and ."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/mobile/setFirebaseToken": {
            "post": {
                "tags": [
                    "Mobile"
                ],
                "summary": "Set firebase token to user",
                "description": "",
                "operationId": "setFirebaseToken",
                "requestBody": {
                    "description": "User credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [],
                                "properties": {
                                    "firebase_token": {
                                        "type": "string",
                                        "example": "token"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "No body in answer"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/mobile/forgotPassCheck": {
            "post": {
                "tags": [
                    "Mobile"
                ],
                "summary": "Check user forgot pass confirm",
                "description": "Comments in schema",
                "operationId": "forgotPassCheck",
                "requestBody": {
                    "description": "User credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "email@gratus.user"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "integer",
                                            "example": "1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Status: 0 or This email was not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/mobile/forgotPassConfirm": {
            "post": {
                "tags": [
                    "Mobile"
                ],
                "summary": "Password recovery confirm",
                "description": "",
                "operationId": "forgotPassConfirm",
                "requestBody": {
                    "description": "User credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [],
                                "properties": {
                                    "email": {
                                        "type": "email",
                                        "example": "email@gratus.user"
                                    },
                                    "password": {
                                        "type": "password",
                                        "example": "password"
                                    },
                                    "repeat_password": {
                                        "type": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password successfully changed"
                    },
                    "545": {
                        "description": "Password should contain at least 6 characters"
                    },
                    "546": {
                        "description": "Passwords don't match"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/mobile/updateUserInfo": {
            "post": {
                "tags": [
                    "Mobile"
                ],
                "summary": "Update User Info",
                "description": "Comments in schema",
                "operationId": "updateUserInfo",
                "requestBody": {
                    "description": "User credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [],
                                "properties": {
                                    "first_name": {
                                        "description": "if model: Tipper or Receiver",
                                        "type": "string",
                                        "example": "name"
                                    },
                                    "last_name": {
                                        "description": "if model: Tipper or Receiver",
                                        "type": "string",
                                        "example": "Surname"
                                    },
                                    "name": {
                                        "description": "if model: Organization",
                                        "type": "string",
                                        "example": "OrgName"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "email@gratus.user"
                                    },
                                    "photo": {
                                        "type": "blob",
                                        "example": "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"
                                    },
                                    "old_password": {
                                        "description": "if you want to set new password",
                                        "type": "string",
                                        "example": "qwerty1234"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password12345"
                                    },
                                    "repeat_password": {
                                        "type": "string",
                                        "example": "password12345"
                                    },
                                    "org_id": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "string",
                                            "example": "Data successfully changed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "547": {
                        "description": "First name should contain only letters"
                    },
                    "548": {
                        "description": "First name should contain at least 3 characters"
                    },
                    "549": {
                        "description": "Last name should contain only letters"
                    },
                    "550": {
                        "description": "Last name should contain at least 3 characters"
                    },
                    "551": {
                        "description": "Picture should be saved on the db"
                    },
                    "552": {
                        "description": "Password should contain at least 6 characters"
                    },
                    "553": {
                        "description": "Passwords don't match"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/mobile/getInfo": {
            "get": {
                "tags": [
                    "Mobile"
                ],
                "summary": "Get User Info",
                "description": "Comments in schema",
                "operationId": "getUserInfo",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "first_name": {
                                            "description": "if model: Tipper or Receiver",
                                            "type": "string",
                                            "example": "name"
                                        },
                                        "last_name": {
                                            "description": "if model: Tipper or Receiver",
                                            "type": "string",
                                            "example": "Surname"
                                        },
                                        "name": {
                                            "description": "if model: Organization",
                                            "type": "string",
                                            "example": "OrgName"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "email@gratus.user"
                                        },
                                        "photo": {
                                            "type": "blob",
                                            "example": "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"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/mobile/userTransactions": {
            "post": {
                "tags": [
                    "Mobile"
                ],
                "summary": "Get User Info",
                "description": "Comments in schema",
                "operationId": "userTransactions",
                "requestBody": {
                    "description": "Choose model",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [],
                                "properties": {
                                    "model": {
                                        "description": "if model: Tipper or Receiver",
                                        "type": "string",
                                        "example": "Tipper"
                                    },
                                    "tips": {
                                        "description": "can be: empty or 'total' or 'today'.",
                                        "type": "string",
                                        "example": "total"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Array of transactions. With this keys: 'transaction_id', 'tipper_id', 'amount', 'status'"
                    },
                    "406": {
                        "description": "Unauthenticated."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/mobile/getFeedbackList": {
            "post": {
                "tags": [
                    "Mobile"
                ],
                "summary": "Get Feedback List",
                "description": "Comments in schema",
                "operationId": "getFeedbackList",
                "requestBody": {
                    "description": "Choose model",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [],
                                "properties": {
                                    "receiver_id": {
                                        "description": "Choose receiver_id or set bearer token to header",
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "date": {
                                        "description": "Can be: empty or 'today'.",
                                        "type": "string",
                                        "example": ""
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Feedback array."
                    },
                    "406": {
                        "description": "Unauthenticated."
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        }
    },
    "security": [
        []
    ]
}
